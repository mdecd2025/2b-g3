<h1>About</h1>
<p>課程名稱: 協同產品設計實習 - Collaborative Product Design Practice</p>
<p>2b  g3第幾組網站: <a href="https://mdecd2025.github.io/2b-g3">https://mdecd2025.github.io/2b-g3</a></p>
<p>2b  g3第幾組倉儲: <a href="https://github.com/mdecd2025/2b-g3">https://github.com/mdecd2025/2b-g3</a></p>
<hr/>
<p>課程代號: cd2025</p>
<p>Teams 線上教學:</p>
<p style="padding-left: 30px;">以 "學號@nfu.edu.tw" 登入<span> </span><a href="https://login.microsoftonline.com/">https://login.microsoftonline.com/</a><span> </span>Office 365</p>
<p style="padding-left: 30px;">Teams 團隊代碼: <span>p5z4eku</span></p>
<hr/>
<p>課程評分:</p>
<p style="padding-left: 30px;">Homework (30%) - 每週至少提交兩次與課程進度有關的內容, 完成後填回自評表單</p>
<p style="padding-left: 30px;">Exam (40%) - 建立包含操作流程影片、心得以及提供檔案下載的網頁後填回自評表單</p>
<p style="padding-left: 30px;">Final Report (30%) - 利用網頁內容進行簡報並提交 pdf 格式書面報告, 完成後填回自評表單</p>
<h1>Tasks</h1>
<p>task1 與 task2 任務目的在建立可於近端維護個人作業與協同作業的準備工作:</p>
<p>task1 (自行製作可攜程式系統)</p>
<p>task2 (使用 SSH 協定執行作業倉儲的推送)</p>
<p>task3 與 task4 則為 HW2 的內容之一</p>
<p>task3 (使用 Solvespace 建立平面四連桿系統零組件)</p>
<p>task4 (使用 Onshape 建立平面四連桿系統零組件)</p>
<p>task5 與 task6 則為 HW3 的主要內容</p>
<p>task5 (Webots Tutorial 1 ~3)</p>
<p>task6 (Webots Tutorial 4 ~6)</p>
<h2>task1</h2>
<h4><span style="background-color: #ccffff;">Portable </span><em>自行製作可攜程式系統</em></h4>
<p>目前最新的 Python 版本為 3.13.2, 利用舊版的 Python310,來建立 Python313可攜程式 </p>
<p>(為了配合 Siemens NX2312)s</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="225" referrerpolicy="strict-origin-when-cross-origin" src="//www.youtube.com/embed/FL9ChZgcjSk" title="" width="400"></iframe></p>
<h3>list</h3>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/mVhaFfnJ0YA" width="560"></iframe></p>
<p><a href="https://mdecd2025.github.io/hw-hyy41223228/content/Brython.html?src=https://gist.githubusercontent.com/hyy41223228/cbd3cf1ef4ac72eb323a0016ac0e9d2e/raw/10edbf9c479803eb80b97305b1dcc704247fbecb/41223228g3">g3成員</a></p>
<p><span>查找g3成員的github頁面超鏈接和作業網站超鏈接</span></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">from browser import html, document, window

# 定義資料來源 URL
url = "https://mde.tw/list/2b.txt"

# 定義要查找的學號列表
target_ids = ["41223226", "41223228", "41223206", "41223235", "41223227", "41223215"]

# 顯示學員總數
print("正在處理學員資料...")

# 取得 HTML 中的元素 id 為 "brython_div1"
brython_div1 = document["brython_div1"]

# 使用 JavaScript 的 fetch API 來抓取資料
def process_data(response_text):
    # 將抓取到的資料分行
    data = response_text.splitlines()

    # 跳過標題行，取得學員資料
    all_stud = data[1:]

    # 逐行處理學員資料
    for stud in all_stud:
        # 假設學員資料的格式為 "學號 學員賬號"
        student_info = stud.strip().split()  # 使用 split() 將每行分為學號和帳號
        if len(student_info) == 2:  # 確保每行有學號和帳號
            student_id = student_info[0].strip()  # 學號
            student_account = student_info[1].strip()  # 學員賬號

            # 檢查學號是否在目標學號列表中
            if student_id in target_ids:
                # 創建 GitHub 和作業網站的超鏈接
                github_link = f"https://github.com/mdecd2025/hw-{student_account}"
                homework_link = f"https://mdecd2025.github.io/hw-{student_account}/"
                
                # 顯示該學號的 GitHub 和作業網站
                brython_div1 &lt;= html.A(student_id, href=github_link)  # 學號是 GitHub repo 連結
                brython_div1 &lt;= " "  # 空格
                brython_div1 &lt;= html.A("(repo)", href=homework_link)  # 作業網站的超鏈接標題為 (repo)
                brython_div1 &lt;= html.BR()  # 換行

# 使用 JavaScript 的 fetch API 拉取資料
window.fetch(url).then(lambda response: response.text()).then(process_data)</pre>
<p><span>查找學員github超鏈接</span></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">from browser import html, document

# 定義資料來源 URL
url = "https://mde.tw/list/2b.txt"

# 讀取資料
data = open(url).readlines()

# 跳過標題行，取得學員資料
all_stud = data[1:]

# 顯示學員總數
print("總共有 " + str(len(all_stud)) + "名學員")

# 取得 HTML 中的元素 id 為 "brython_div1"
brython_div1 = document["brython_div1"]

# 逐行處理學員資料
for stud in all_stud:
    # 假設學員資料的格式為 "學號 學員賬號"
    student_info = stud.strip().split()  # 使用 split() 將每行分為學號和帳號
    if len(student_info) == 2:  # 確保每行有學號和帳號
        student_id = student_info[0].strip()  # 學號
        student_account = student_info[1].strip()  # 學員賬號

        # 創建 GitHub 和作業網站的超鏈接
        github_link = f"https://github.com/mdecd2025/hw-{student_account}"
        homework_link = f"https://mdecd2025.github.io/hw-{student_account}/"
        
        # 將學號作為 GitHub repository 的鏈接
        brython_div1 &lt;= html.A(student_id, href=github_link)  # 學號是 GitHub repo 連結
        brython_div1 &lt;= " "  # 空格
        
        # 插入作業網站的超鏈接，標題改為 "(repo)"
        brython_div1 &lt;= html.A("(repo)", href=homework_link)  # 作業網站的超鏈接標題為 (repo)
        
        # 插入換行
        brython_div1 &lt;= html.BR()  # 換行</pre>
<p></p>
<h2>task2</h2>
<h3>w3</h3>
<p><span>已知各班已經參與分組的學員 Github 帳號分別如下:</span></p>
<pre class="brush:java;auto-links:false;toolbar:false" contenteditable="false">a_all_members = ['41223154', '41271125', '41271158', '41271146', '41271131', 'CYG41223103', '41223102', '41023128', '41023137', '41223137', '41223157', '41223156', 'otakuyoyo', '41223141', '41223113', 'kim41223114', 'joeisme1208', '41223116', '41223144', '41223140', '41223143', '41223138', '41223134', '41223136', 'zhe41223118', 'Spirit0224', 'yuhao-08', '41223158', 'Ren911308', '41223150', 'Manto8', 'CYA41223106', 'yan21ed', 'Lin41223107', '41223133', 'hong41223129', '41223110', '41223147', 'Linjiahong41223125', 'CHN41223132', 'Yu-Fang-Hong', '41023111', 'yckaooooo', 'kolas911205', '41023105', '40932134', '41223104', 'yan41223101', '41223105', '41223153', '41223120', '41223152', 'G8People', 'WSE41223112', '41223146', '41223119']
b_all_members = ['41223251', '41223211', '41223245', '41223243', 'jjjay41223212', 'leeshaowei0716', '41223234', '41223209', '41223205', '41223201', '41223202', '41223208-hw', '41223216', '41223217', '41223248', 'emma0312', '41223242', '41223203', '41223144', '41223235', 'RAY41223215', 'hyy41223228', '41223227', '41223206', '41223226-0', 'Cloud41223237', 'Yujenchuang', '41223225', 'ljg41223220', 'supowen', 'jacky93111', '41223246', 'Liu41223244', '41223236', '41223219', '41271237', '41223249', '41223229', '41223224', '41223222', '41223231', 'linryan23', '41023114', '41223230', 'timluo123', 'CYC41223247', '41223218', 'ych0227', '41023215', '41023216', '41023213', '41071203', '41071204', '41071202', 'c-ching', 'YUN4', 'tseYU000', 'snowfall-killer', 'junpig10']
</pre>
<p><span>接著用程式列出目前各班尚未納組的學員學號。(</span><a href="https://mdecd2025.github.io/2b-g3/content/Brython.html?src=https://gist.githubusercontent.com/41223226-0/5ebcc947596d725f38669bc87530b1f0/raw/1ccf707f0c0b006160ef9982801d2aedc2f30ccb/test_teamless_list.py">執行結果</a><span>)</span></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">from browser import html, document
import urllib.request
 
# 設定 URL
url = "https://mde.tw/list/2b.txt"
 
# 讀取網站內容
response = urllib.request.urlopen(url)
data = response.read().splitlines()  # 直接讀取並按行分割
 
# 確保資料存在
if len(data) &gt; 1:
    all_stud = data[1:]  # 跳過標題列
    print("總共有 " + str(len(all_stud)) + " 名學員")
else:
    all_stud = []
    print("學員名單讀取失敗")
 
# 已分組的帳號名單
grouped_accounts = {
    '41223251', '41223211', '41223245', '41223243', 'jjjay41223212', 'leeshaowei0716', 
    '41223234', '41223209', '41223205', '41223201', '41223202', '41223208-hw', '41223216', 
    '41223217', '41223248', 'emma0312', '41223242', '41223203', '41223144', '41223235', 
    'RAY41223215', 'hyy41223228', '41223227', '41223206', '41223226-0', 'Cloud41223237', 
    'Yujenchuang', '41223225', 'ljg41223220', 'supowen', 'jacky93111', '41223246', 'Liu41223244', 
    '41223236', '41223219', '41271237', '41223249', '41223229', '41223224', '41223222', 
    '41223231', 'linryan23', '41023114', '41223230', 'timluo123', 'CYC41223247', '41223218', 
    'ych0227', '41023215', '41023216', '41023213', '41071203', '41071204', '41071202', 
    'c-ching', 'YUN4', 'tseYU000', 'snowfall-killer', 'junpig10'
}
 
# 找到網頁中的特定位置
brython_div1 = document["brython_div1"]
 
# **動態插入未分組的學號與超連結**
index = 1
for student in all_stud:
    parts = student.strip().split()  # 用空格分割
    if len(parts) == 0:
        continue  # 跳過空行
     
    student_id = parts[0]  # 學號
    account = parts[1] if len(parts) &gt; 1 else student_id  # 若帳號空白則用學號當帳號
 
    if account not in grouped_accounts:  # 只處理未分組帳號
        # 設定學號的超連結
        student_link = f"https://mdecd2025.github.io/hw-{account}"
        # 設定repo的超連結
        repo_link = f"https://github.com/mdecd2025/hw-{account}"
         
        # 插入學號作為超連結，並添加 repo 連結
        brython_div1 &lt;= f"{index}. " + html.A(student_id, href=student_link) + " "
        brython_div1 &lt;= f"（" + html.A("repo", href=repo_link) + "）"
        brython_div1 &lt;= html.BR()  # 換行
        index += 1</pre>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/nxPS6uj0Lp0" width="400"></iframe></p>
<h2>task3</h2>
<p><strong>使用 Solvespace 建立平面四連桿系統零組件</strong></p>
<p><a href="https://drive.google.com/drive/folders/1O_Nu0jMDW87vw11wMTFJ8po_uPXV4bIX?usp=drive_link">Download.slvs</a></p>
<p><span style="background-color: #ff99cc;"><strong>link1</strong></span></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="225" referrerpolicy="strict-origin-when-cross-origin" src="//www.youtube.com/embed/Esk8uXsGoS0" title="link1-Solvespace 建立平面四連桿系統零組件-41223235" width="400"></iframe>\</p>
<p><span style="background-color: #ffcc99;"><strong>link2</strong></span></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="225" referrerpolicy="strict-origin-when-cross-origin" src="//www.youtube.com/embed/UpXrBdoV2io" title="link2-Solvespace 建立平面四連桿系統零組件-41223235" width="400"></iframe></p>
<p><span style="background-color: #ffff99;"><strong>link3</strong></span></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="225" referrerpolicy="strict-origin-when-cross-origin" src="//www.youtube.com/embed/DxVinA48c0o" title="link3-Solvespace 建立平面四連桿系統零組件-41223235" width="400"></iframe></p>
<p><span style="background-color: #ccffcc;">base</span></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="225" referrerpolicy="strict-origin-when-cross-origin" src="//www.youtube.com/embed/H5C8hjwKGGE" title="base-Solvespace 建立平面四連桿系統零組件-41223235" width="400"></iframe></p>
<p></p>
<p><span style="background-color: #ccffff;">shaft</span></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="225" referrerpolicy="strict-origin-when-cross-origin" src="//www.youtube.com/embed/lz0wGVLiNy4" title="shaft-Solvespace 建立平面四連桿系統零組件-41223235" width="400"></iframe><span style="background-color: #ccffff;"><br/></span></p>
<p><span style="background-color: #99ccff;">shaft2</span></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="225" referrerpolicy="strict-origin-when-cross-origin" src="//www.youtube.com/embed/ITl9zVjBumY" title="shaft2-Solvespace 建立平面四連桿系統零組件-41223235" width="400"></iframe></p>
<p><span style="background-color: #cc99ff;">fourbar linkage design</span></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="225" referrerpolicy="strict-origin-when-cross-origin" src="//www.youtube.com/embed/tDq35B24AVQ" title="fourbar linkage design-Solvespace 建立平面四連桿系統零組件-41223235" width="400"></iframe></p>
<p><span style="background-color: #cc99ff;">fourbar linkage design w assembly</span></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="225" referrerpolicy="strict-origin-when-cross-origin" src="//www.youtube.com/embed/TDIRsUjEwhw" title="fourbar linkage design w assembly-Solvespace 建立平面四連桿系統零組件-41223235" width="400"></iframe></p><h2>task4</h2>
<h2>task5</h2>
<h2>task6</h2>
<h1>Homework</h1>
<h2>HW1</h2>
<p><span>先由solvespace畫簡單的模型模擬旋轉路徑，然後再開始使用Webots進行模型的建立</span></p>
<p><span><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/7GQWMKD4E6o" width="560"></iframe></span></p>
<p><span><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/Le_fHPt_8HU" width="560"></iframe></span></p>
<h2>HW2</h2>
<h2>HW3</h2>
<h1>Exam</h1>
<h2>Exam1</h2>
<p>Exam1 (10%): 建立 Webots 基本物件模擬場景</p>
<p>操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 Exam1 - 學員學號</p>
<p>繪製連桿</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/8w8mpVrlSTw" width="560"></iframe></p>
<p><span>連桿距離</span></p>
<p><span><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/oGWXzjdoZbI" width="560"></iframe></span></p>
<p>運轉</p>
<p>運轉壓縮檔 : <a href="/downloads/Exam1運轉.zip">/downloads/Exam1運轉.zip</a></p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/Gv7dciC0iBs" width="560"></iframe></p><h2>Exam2</h2>
<h2>Exam3</h2>
<p>Exam3 (20%): Webots 機電模擬場景的協同設計</p>
<p>操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 Exam3 - 學員學號</p>
<p><span>以下為exam3-1製作過程:</span></p>
<p>首先收尋到控制室&gt;網路和網際網路&gt;網路和共用中心的檢視網路狀態及工作&gt;找到乙太網路&gt;內容&gt;找到IPv6&gt;</p>
<p><span>以我的為範例 我的地址和dns為 ( IPv6地址是到<a href="https://mde.tw/cd2025/content/IPv6.html">老師網站</a>找 )</span></p>
<p><span>2001:288:6004:17:fff1:cd25:0000:b047</span></p>
<p>修好後打開cmd <span>輸入webotsw --stream "你的HW1的wbt檔案位置"</span></p>
<p><span>webotsw下面有序號1234對應到網址上數字</span></p>
<p><span>打開後http://localhost:1234/index.html可以看到模擬程式</span></p>
<p><span>這是我的 Connect to: ws://[2001:288:6004:17:fff1:cd25:0000:b047]:1234</span></p>
<p><span>如果是要組員查看的話 改成組員的ipv6地址</span></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="225" referrerpolicy="strict-origin-when-cross-origin" src="//www.youtube.com/embed/248XXYZ_Fyw" title="國立虎尾科技大學 - 機械設計工程系 - cd2025 Exam3-1 - 41223235" width="400"></iframe></p>
<hr/>
<p><span>以下為exam3-2 製作過程:</span></p>
<p><span>首先先下載老師的七段顯示器進行修改,利用GPT了解程式碼功能,可在number = 235 更改數值,後面過程和exam3-1一樣瀏覽器檢視</span></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="225" referrerpolicy="strict-origin-when-cross-origin" src="//www.youtube.com/embed/81_A3JIT3Fg" title="國立虎尾科技大學 - 機械設計工程系 - cd2025 Exam3-2 - 41223235" width="400"></iframe></p>
<hr/>
<p><span>以下為exam3-3 製作過程:</span></p>
<p><span>這裡也是一樣用上面的方式開啟程式,利用老師給的.wbt來模擬,並到瀏覽器檢視</span></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="225" referrerpolicy="strict-origin-when-cross-origin" src="//www.youtube.com/embed/QOASi4UFuFk" title="國立虎尾科技大學 - 機械設計工程系 - cd2025 Exam3-3 - 41223235" width="400"></iframe></p><h1>Final</h1>
<p><span>期末協同專案執行過程影片、簡報與 PDf 報告檔案 (六人一組) (30%)</span></p>
<p><span>題目: <span style="background-color: #ccffcc;">Webots 動態投籃模擬系統的協同設計</span></span></p>
<p><span>說明: </span></p>
<p style="padding-left: 30px;"><span>籃框架被配置在一定範圍內, 可隨機慢速前進、後退及左右擺動, 投籃機構系統帶有一定數量的籃球, 被配置在可自由移動的輪車上.</span></p>
<p style="padding-left: 30px;"><span>操作者可利用鍵盤特定按鍵控制投籃輪車的移動並發射投籃, 每投出一球後系統透過記分板進行計分, 並由送球機構進行補球或移動輪車取球, 遊戲可進行至全部數量籃球投完為止.</span></p>
<p>請將期末協同專案執行過程、內容與心得, 製作成影片，配合字幕上傳至 Youtube 後嵌入各階段的期末報告頁面中.</p>
<p>影片標題: <span style="background-color: #ffff00;">國立虎尾科技大學 - 機械設計工程系 - cd2025 期末報告 - 學員學號 - 各階段影片主題<br/></span></p>
<h1>Brython</h1>
<p><button id="add1to100">1 add to 100</button></p>
<!-- 導入 brython 程式庫 -->
<p>
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
</p>
<!-- 啟動 Brython -->
<p>
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
</script>
</p>
<p><!-- 導入 FileSaver 與 filereader --></p>
<p>
<script src="/static/ace/FileSaver.min.js" type="text/javascript"></script>
<script src="/static/ace/filereader.js" type="text/javascript"></script>
</p>
<p><!-- 導入 ace --></p>
<p>
<script src="/static/ace/ace.js" type="text/javascript"></script>
<script src="/static/ace/ext-language_tools.js" type="text/javascript"></script>
<script src="/static/ace/mode-python3.js" type="text/javascript"></script>
<script src="/static/ace/snippets/python.js" type="text/javascript"></script>
</p>
<p><!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 -->
<script src="/static/Cango-24v03-min.js"></script>
<script src="/static/gearUtils-09.js"></script>
<script src="/static/SVGpathUtils-6v03-min.js"></script>
<script src="/static/sylvester.js"></script>
<script src="/static/PrairieDraw.js"></script>
</p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/javascript">
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
</script>
</p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()
Ace1 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run1():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace1.editor.setValue(prog)
    Ace1.editor.scrollToRow(0)
    Ace1.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace1.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run1'].bind('click', Ace1.run)
doc['kw_show_console1'].bind('click', Ace1.show_console)
doc['kw_clear_console1'].bind('click', Ace1.clear_console)
doc['clear_bd1'].bind('click', clear_bd1)
# 呼叫函式執行
run1()
</script>
</p>
<p><!-- add 1 to 100 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace2 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add(ev):
    Ace2.editor.setValue(add_src)
    Ace2.editor.scrollToRow(0)
    Ace2.editor.gotoLine(0)
    Ace2.run()

# id 為 "add1to100" 的按鈕點按時, 執行 add 方法
doc["add1to100"].bind('click', add)
</script>
</p>
<p><!-- add 1 to 100 結束--></p>
<!-- editor1 開始 -->
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor1" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src1', 'kw_filename1');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run1">Run</button> <button id="kw_show_console1">Output</button> <button id="kw_clear_console1">清除輸出區</button><button id="clear_bd1">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console1"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --></p>
<div id="brython_div1"></div>
<!-- editor1 結束 --><hr/><!-- ########################################## -->
<p>從 1 累加到 100 part2:</p>
<p><button id="add1to100part2">1 add to 100</button><button id="cango_three_gears">cango_three_gears</button><button id="bsnake">BSnake</button><button id="aitetris">AI Tetris</button></p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()
Ace3 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run2():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src2"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace3.editor.setValue(prog)
    Ace3.editor.scrollToRow(0)
    Ace3.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace3.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run2'].bind('click', Ace3.run)
doc['kw_show_console2'].bind('click', Ace3.show_console)
doc['kw_clear_console2'].bind('click', Ace3.clear_console)
doc['clear_bd2'].bind('click', clear_bd2)
# 呼叫函式執行
run2()
</script>
</p>
<p><!-- add 1 to 100 part2 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace4 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )

# 透過 Ace4 以類別建立一個通用的 button2, 可以在多個案例中將 gist 程導入編輯區

class button2:
    def __init__(self, url):
        self.url = url

    # 記得加入 event 輸入變數
    def do(self,ev):
        Ace4.editor.setValue(open(self.url).read())
        Ace4.editor.scrollToRow(0)
        Ace4.editor.gotoLine(0)
        Ace4.run()

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add2(ev):
    Ace4.editor.setValue(add_src)
    Ace4.editor.scrollToRow(0)
    Ace4.editor.gotoLine(0)
    Ace4.run()

# id 為 "add1to100part2" 的按鈕點按時, 執行 add 方法
doc["add1to100part2"].bind('click', add2)
# 以下為運用 button2 class 的通用 gist 程式導入區
################################## cango_three_gears start
cango_three_gears_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/cango_three_gears_brython_div2.py"
cango_three_gears = button2(cango_three_gears_url)
doc["cango_three_gears"].bind("click", cango_three_gears.do)
################################## cango_three_gears end
################################## bsnake start
bsnake_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/kmol_snakey.py"
bsnake = button2(bsnake_url)
doc["bsnake"].bind("click", bsnake.do)
################################## bsnake end
################################## aitetris start
aitetris_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/pygame_to_brython_tetris_ai.py"
aitetris = button2(aitetris_url)
doc["aitetris"].bind("click", aitetris.do)
################################## aitetris end
</script>
</p>
<p><!-- add 1 to 100 part2 結束--></p>
<!-- editor2 開始 -->
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor2" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename2" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src2', 'kw_filename2');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run2">Run</button> <button id="kw_show_console2">Output</button> <button id="kw_clear_console2">清除輸出區</button><button id="clear_bd2">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console2"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --></p>
<div id="brython_div2"></div>
<!-- editor2 結束 --><hr/>
<p>
<script src="https://unpkg.com/three@0.144.0/build/three.js" type="text/javascript"></script>
</p>